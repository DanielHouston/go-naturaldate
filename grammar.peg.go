package naturaldate

// Code generated by peg -inline -switch grammar.peg DO NOT EDIT

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleWord
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleMINUTES
	ruleYESTERDAY
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	rulePegText
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
	ruleAction67
	ruleAction68
	ruleAction69
	ruleAction70
	ruleAction71
	ruleAction72
	ruleAction73
	ruleAction74
	ruleAction75
	ruleAction76
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"Word",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"MINUTES",
	"YESTERDAY",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"PegText",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
	"Action67",
	"Action68",
	"Action69",
	"Action70",
	"Action71",
	"Action72",
	"Action73",
	"Action74",
	"Action75",
	"Action76",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[34m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [122]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction1:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))

		case ruleAction5:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction6:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction9:

			p.t = p.t.Add(p.withDirection(time.Hour) * time.Duration(p.number))

		case ruleAction10:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction11:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction12:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction13:

			p.t = truncateDay(p.t.Add(day * time.Duration(p.number)))

		case ruleAction14:

			p.t = truncateDay(p.t.Add(p.withDirection(day) * time.Duration(p.number)))

		case ruleAction15:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction16:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction17:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction18:

			p.t = truncateDay(p.t.Add(week * time.Duration(p.number)))

		case ruleAction19:

			p.t = truncateDay(p.t.Add(p.withDirection(week) * time.Duration(p.number)))

		case ruleAction20:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction21:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction22:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction23:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction24:

			p.t = prevMonth(p.t, p.month)

		case ruleAction25:

			p.t = nextMonth(p.t, p.month)

		case ruleAction26:

			if p.direction < 0 {
				p.t = prevMonth(p.t, p.month)
			} else {
				p.t = nextMonth(p.t, p.month)
			}

		case ruleAction27:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction28:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction29:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction30:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction31:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction32:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction33:

			p.t = truncateDay(p.t)

		case ruleAction34:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction35:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction36:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction37:

			if p.direction < 0 {
				p.t = truncateDay(prevWeekday(p.t, p.weekday))
			} else {
				p.t = truncateDay(nextWeekday(p.t, p.weekday))
			}

		case ruleAction38:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction39:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction40:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction41:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction42:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction43:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction44:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction45:
			p.number = 1
		case ruleAction46:
			p.number = 2
		case ruleAction47:
			p.number = 3
		case ruleAction48:
			p.number = 4
		case ruleAction49:
			p.number = 5
		case ruleAction50:
			p.number = 6
		case ruleAction51:
			p.number = 7
		case ruleAction52:
			p.number = 8
		case ruleAction53:
			p.number = 9
		case ruleAction54:
			p.number = 10
		case ruleAction55:
			p.weekday = time.Sunday
		case ruleAction56:
			p.weekday = time.Monday
		case ruleAction57:
			p.weekday = time.Tuesday
		case ruleAction58:
			p.weekday = time.Wednesday
		case ruleAction59:
			p.weekday = time.Thursday
		case ruleAction60:
			p.weekday = time.Friday
		case ruleAction61:
			p.weekday = time.Saturday
		case ruleAction62:
			p.month = time.January
		case ruleAction63:
			p.month = time.February
		case ruleAction64:
			p.month = time.March
		case ruleAction65:
			p.month = time.April
		case ruleAction66:
			p.month = time.May
		case ruleAction67:
			p.month = time.June
		case ruleAction68:
			p.month = time.July
		case ruleAction69:
			p.month = time.August
		case ruleAction70:
			p.month = time.September
		case ruleAction71:
			p.month = time.October
		case ruleAction72:
			p.month = time.November
		case ruleAction73:
			p.month = time.December
		case ruleAction74:
			p.number = 1
		case ruleAction75:
			p.number = 1
		case ruleAction76:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				{
					position4 := position
					{
						position5, tokenIndex5 := position, tokenIndex
						{
							position7 := position
							if buffer[position] != rune('n') {
								goto l6
							}
							position++
							if buffer[position] != rune('o') {
								goto l6
							}
							position++
							if buffer[position] != rune('w') {
								goto l6
							}
							position++
							if !_rules[rule_]() {
								goto l6
							}
							add(ruleNOW, position7)
						}
						goto l5
					l6:
						position, tokenIndex = position5, tokenIndex5
						{
							position9 := position
							{
								position10, tokenIndex10 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l11
								}
								if !_rules[ruleMINUTES]() {
									goto l11
								}
								if !_rules[ruleAGO]() {
									goto l11
								}
								{
									add(ruleAction0, position)
								}
								goto l10
							l11:
								position, tokenIndex = position10, tokenIndex10
								{
									position14, tokenIndex14 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l15
									}
									if !_rules[ruleMINUTES]() {
										goto l15
									}
									if !_rules[ruleFROM_NOW]() {
										goto l15
									}
									goto l14
								l15:
									position, tokenIndex = position14, tokenIndex14
									if !_rules[ruleIn]() {
										goto l13
									}
									{
										position16, tokenIndex16 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l16
										}
										goto l17
									l16:
										position, tokenIndex = position16, tokenIndex16
									}
								l17:
									if !_rules[ruleMINUTES]() {
										goto l13
									}
									{
										position18, tokenIndex18 := position, tokenIndex
										if !_rules[ruleFROM_NOW]() {
											goto l18
										}
										goto l19
									l18:
										position, tokenIndex = position18, tokenIndex18
									}
								l19:
								}
							l14:
								{
									add(ruleAction1, position)
								}
								goto l10
							l13:
								position, tokenIndex = position10, tokenIndex10
								if !_rules[ruleLast]() {
									goto l21
								}
								{
									position22, tokenIndex22 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l22
									}
									goto l23
								l22:
									position, tokenIndex = position22, tokenIndex22
								}
							l23:
								if !_rules[ruleMINUTES]() {
									goto l21
								}
								{
									add(ruleAction2, position)
								}
								goto l10
							l21:
								position, tokenIndex = position10, tokenIndex10
								if !_rules[ruleNext]() {
									goto l25
								}
								{
									position26, tokenIndex26 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l26
									}
									goto l27
								l26:
									position, tokenIndex = position26, tokenIndex26
								}
							l27:
								if !_rules[ruleMINUTES]() {
									goto l25
								}
								{
									add(ruleAction3, position)
								}
								goto l10
							l25:
								position, tokenIndex = position10, tokenIndex10
								if !_rules[ruleNumber]() {
									goto l8
								}
								if !_rules[ruleMINUTES]() {
									goto l8
								}
								{
									add(ruleAction4, position)
								}
							}
						l10:
							add(ruleRelativeMinutes, position9)
						}
						goto l5
					l8:
						position, tokenIndex = position5, tokenIndex5
						{
							position31 := position
							{
								position32, tokenIndex32 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l33
								}
								if !_rules[ruleHOURS]() {
									goto l33
								}
								if !_rules[ruleAGO]() {
									goto l33
								}
								{
									add(ruleAction5, position)
								}
								goto l32
							l33:
								position, tokenIndex = position32, tokenIndex32
								{
									position36, tokenIndex36 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l37
									}
									if !_rules[ruleHOURS]() {
										goto l37
									}
									if !_rules[ruleFROM_NOW]() {
										goto l37
									}
									goto l36
								l37:
									position, tokenIndex = position36, tokenIndex36
									if !_rules[ruleIn]() {
										goto l35
									}
									{
										position38, tokenIndex38 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l38
										}
										goto l39
									l38:
										position, tokenIndex = position38, tokenIndex38
									}
								l39:
									if !_rules[ruleHOURS]() {
										goto l35
									}
									{
										position40, tokenIndex40 := position, tokenIndex
										if !_rules[ruleFROM_NOW]() {
											goto l40
										}
										goto l41
									l40:
										position, tokenIndex = position40, tokenIndex40
									}
								l41:
								}
							l36:
								{
									add(ruleAction6, position)
								}
								goto l32
							l35:
								position, tokenIndex = position32, tokenIndex32
								if !_rules[ruleLast]() {
									goto l43
								}
								{
									position44, tokenIndex44 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l44
									}
									goto l45
								l44:
									position, tokenIndex = position44, tokenIndex44
								}
							l45:
								if !_rules[ruleHOURS]() {
									goto l43
								}
								{
									add(ruleAction7, position)
								}
								goto l32
							l43:
								position, tokenIndex = position32, tokenIndex32
								if !_rules[ruleNext]() {
									goto l47
								}
								{
									position48, tokenIndex48 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l48
									}
									goto l49
								l48:
									position, tokenIndex = position48, tokenIndex48
								}
							l49:
								if !_rules[ruleHOURS]() {
									goto l47
								}
								{
									add(ruleAction8, position)
								}
								goto l32
							l47:
								position, tokenIndex = position32, tokenIndex32
								if !_rules[ruleNumber]() {
									goto l30
								}
								if !_rules[ruleHOURS]() {
									goto l30
								}
								{
									add(ruleAction9, position)
								}
							}
						l32:
							add(ruleRelativeHours, position31)
						}
						goto l5
					l30:
						position, tokenIndex = position5, tokenIndex5
						{
							position53 := position
							{
								position54, tokenIndex54 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l55
								}
								if !_rules[ruleDAYS]() {
									goto l55
								}
								if !_rules[ruleAGO]() {
									goto l55
								}
								{
									add(ruleAction10, position)
								}
								goto l54
							l55:
								position, tokenIndex = position54, tokenIndex54
								{
									position58, tokenIndex58 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l59
									}
									if !_rules[ruleDAYS]() {
										goto l59
									}
									if !_rules[ruleFROM_NOW]() {
										goto l59
									}
									goto l58
								l59:
									position, tokenIndex = position58, tokenIndex58
									if !_rules[ruleIn]() {
										goto l57
									}
									{
										position60, tokenIndex60 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l60
										}
										goto l61
									l60:
										position, tokenIndex = position60, tokenIndex60
									}
								l61:
									if !_rules[ruleDAYS]() {
										goto l57
									}
									{
										position62, tokenIndex62 := position, tokenIndex
										if !_rules[ruleFROM_NOW]() {
											goto l62
										}
										goto l63
									l62:
										position, tokenIndex = position62, tokenIndex62
									}
								l63:
								}
							l58:
								{
									add(ruleAction11, position)
								}
								goto l54
							l57:
								position, tokenIndex = position54, tokenIndex54
								if !_rules[ruleLast]() {
									goto l65
								}
								{
									position66, tokenIndex66 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l66
									}
									goto l67
								l66:
									position, tokenIndex = position66, tokenIndex66
								}
							l67:
								if !_rules[ruleDAYS]() {
									goto l65
								}
								{
									add(ruleAction12, position)
								}
								goto l54
							l65:
								position, tokenIndex = position54, tokenIndex54
								if !_rules[ruleNext]() {
									goto l69
								}
								{
									position70, tokenIndex70 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l70
									}
									goto l71
								l70:
									position, tokenIndex = position70, tokenIndex70
								}
							l71:
								if !_rules[ruleDAYS]() {
									goto l69
								}
								{
									add(ruleAction13, position)
								}
								goto l54
							l69:
								position, tokenIndex = position54, tokenIndex54
								if !_rules[ruleNumber]() {
									goto l52
								}
								if !_rules[ruleDAYS]() {
									goto l52
								}
								{
									add(ruleAction14, position)
								}
							}
						l54:
							add(ruleRelativeDays, position53)
						}
						goto l5
					l52:
						position, tokenIndex = position5, tokenIndex5
						{
							position75 := position
							{
								position76, tokenIndex76 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l77
								}
								if !_rules[ruleWEEKS]() {
									goto l77
								}
								if !_rules[ruleAGO]() {
									goto l77
								}
								{
									add(ruleAction15, position)
								}
								goto l76
							l77:
								position, tokenIndex = position76, tokenIndex76
								{
									position80, tokenIndex80 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l81
									}
									if !_rules[ruleWEEKS]() {
										goto l81
									}
									if !_rules[ruleFROM_NOW]() {
										goto l81
									}
									goto l80
								l81:
									position, tokenIndex = position80, tokenIndex80
									if !_rules[ruleIn]() {
										goto l79
									}
									{
										position82, tokenIndex82 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l82
										}
										goto l83
									l82:
										position, tokenIndex = position82, tokenIndex82
									}
								l83:
									if !_rules[ruleWEEKS]() {
										goto l79
									}
									{
										position84, tokenIndex84 := position, tokenIndex
										if !_rules[ruleFROM_NOW]() {
											goto l84
										}
										goto l85
									l84:
										position, tokenIndex = position84, tokenIndex84
									}
								l85:
								}
							l80:
								{
									add(ruleAction16, position)
								}
								goto l76
							l79:
								position, tokenIndex = position76, tokenIndex76
								if !_rules[ruleLast]() {
									goto l87
								}
								{
									position88, tokenIndex88 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l88
									}
									goto l89
								l88:
									position, tokenIndex = position88, tokenIndex88
								}
							l89:
								if !_rules[ruleWEEKS]() {
									goto l87
								}
								{
									add(ruleAction17, position)
								}
								goto l76
							l87:
								position, tokenIndex = position76, tokenIndex76
								if !_rules[ruleNext]() {
									goto l91
								}
								{
									position92, tokenIndex92 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l92
									}
									goto l93
								l92:
									position, tokenIndex = position92, tokenIndex92
								}
							l93:
								if !_rules[ruleWEEKS]() {
									goto l91
								}
								{
									add(ruleAction18, position)
								}
								goto l76
							l91:
								position, tokenIndex = position76, tokenIndex76
								if !_rules[ruleNumber]() {
									goto l74
								}
								if !_rules[ruleWEEKS]() {
									goto l74
								}
								{
									add(ruleAction19, position)
								}
							}
						l76:
							add(ruleRelativeWeeks, position75)
						}
						goto l5
					l74:
						position, tokenIndex = position5, tokenIndex5
						{
							position97 := position
							{
								position98, tokenIndex98 := position, tokenIndex
								{
									position100 := position
									if buffer[position] != rune('t') {
										goto l99
									}
									position++
									if buffer[position] != rune('o') {
										goto l99
									}
									position++
									if buffer[position] != rune('d') {
										goto l99
									}
									position++
									if buffer[position] != rune('a') {
										goto l99
									}
									position++
									if buffer[position] != rune('y') {
										goto l99
									}
									position++
									if !_rules[rule_]() {
										goto l99
									}
									add(ruleTODAY, position100)
								}
								{
									add(ruleAction33, position)
								}
								goto l98
							l99:
								position, tokenIndex = position98, tokenIndex98
								{
									switch buffer[position] {
									case 'n':
										if !_rules[ruleNEXT]() {
											goto l96
										}
										if !_rules[ruleWeekday]() {
											goto l96
										}
										{
											add(ruleAction36, position)
										}
										break
									case 'y':
										{
											position104 := position
											if buffer[position] != rune('y') {
												goto l96
											}
											position++
											if buffer[position] != rune('e') {
												goto l96
											}
											position++
											if buffer[position] != rune('s') {
												goto l96
											}
											position++
											if buffer[position] != rune('t') {
												goto l96
											}
											position++
											if buffer[position] != rune('e') {
												goto l96
											}
											position++
											if buffer[position] != rune('r') {
												goto l96
											}
											position++
											if buffer[position] != rune('d') {
												goto l96
											}
											position++
											if buffer[position] != rune('a') {
												goto l96
											}
											position++
											if buffer[position] != rune('y') {
												goto l96
											}
											position++
											if !_rules[rule_]() {
												goto l96
											}
											add(ruleYESTERDAY, position104)
										}
										{
											add(ruleAction34, position)
										}
										break
									case 'l', 'p':
										if !_rules[ruleLAST]() {
											goto l96
										}
										if !_rules[ruleWeekday]() {
											goto l96
										}
										{
											add(ruleAction35, position)
										}
										break
									default:
										if !_rules[ruleWeekday]() {
											goto l96
										}
										{
											add(ruleAction37, position)
										}
										break
									}
								}

							}
						l98:
							add(ruleRelativeWeekdays, position97)
						}
						goto l5
					l96:
						position, tokenIndex = position5, tokenIndex5
						{
							position109 := position
							{
								position110, tokenIndex110 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l111
								}
								if !_rules[ruleMONTHS]() {
									goto l111
								}
								if !_rules[ruleAGO]() {
									goto l111
								}
								{
									add(ruleAction20, position)
								}
								goto l110
							l111:
								position, tokenIndex = position110, tokenIndex110
								{
									position114, tokenIndex114 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l115
									}
									if !_rules[ruleMONTHS]() {
										goto l115
									}
									if !_rules[ruleFROM_NOW]() {
										goto l115
									}
									goto l114
								l115:
									position, tokenIndex = position114, tokenIndex114
									if !_rules[ruleIn]() {
										goto l113
									}
									{
										position116, tokenIndex116 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l116
										}
										goto l117
									l116:
										position, tokenIndex = position116, tokenIndex116
									}
								l117:
									if !_rules[ruleMONTHS]() {
										goto l113
									}
									{
										position118, tokenIndex118 := position, tokenIndex
										if !_rules[ruleFROM_NOW]() {
											goto l118
										}
										goto l119
									l118:
										position, tokenIndex = position118, tokenIndex118
									}
								l119:
								}
							l114:
								{
									add(ruleAction21, position)
								}
								goto l110
							l113:
								position, tokenIndex = position110, tokenIndex110
								if !_rules[ruleLast]() {
									goto l121
								}
								{
									position122, tokenIndex122 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l122
									}
									goto l123
								l122:
									position, tokenIndex = position122, tokenIndex122
								}
							l123:
								if !_rules[ruleMONTHS]() {
									goto l121
								}
								{
									add(ruleAction22, position)
								}
								goto l110
							l121:
								position, tokenIndex = position110, tokenIndex110
								if !_rules[ruleNext]() {
									goto l125
								}
								{
									position126, tokenIndex126 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l126
									}
									goto l127
								l126:
									position, tokenIndex = position126, tokenIndex126
								}
							l127:
								if !_rules[ruleMONTHS]() {
									goto l125
								}
								{
									add(ruleAction23, position)
								}
								goto l110
							l125:
								position, tokenIndex = position110, tokenIndex110
								if !_rules[ruleLAST]() {
									goto l129
								}
								if !_rules[ruleMonth]() {
									goto l129
								}
								{
									add(ruleAction24, position)
								}
								goto l110
							l129:
								position, tokenIndex = position110, tokenIndex110
								if !_rules[ruleNEXT]() {
									goto l131
								}
								if !_rules[ruleMonth]() {
									goto l131
								}
								{
									add(ruleAction25, position)
								}
								goto l110
							l131:
								position, tokenIndex = position110, tokenIndex110
								if !_rules[ruleMonth]() {
									goto l108
								}
								{
									add(ruleAction26, position)
								}
							}
						l110:
							add(ruleRelativeMonth, position109)
						}
						goto l5
					l108:
						position, tokenIndex = position5, tokenIndex5
						{
							position135 := position
							{
								position136, tokenIndex136 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l137
								}
								if !_rules[ruleYEARS]() {
									goto l137
								}
								if !_rules[ruleAGO]() {
									goto l137
								}
								{
									add(ruleAction27, position)
								}
								goto l136
							l137:
								position, tokenIndex = position136, tokenIndex136
								{
									position140, tokenIndex140 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l141
									}
									if !_rules[ruleYEARS]() {
										goto l141
									}
									if !_rules[ruleFROM_NOW]() {
										goto l141
									}
									goto l140
								l141:
									position, tokenIndex = position140, tokenIndex140
									if !_rules[ruleIn]() {
										goto l139
									}
									{
										position142, tokenIndex142 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l142
										}
										goto l143
									l142:
										position, tokenIndex = position142, tokenIndex142
									}
								l143:
									if !_rules[ruleYEARS]() {
										goto l139
									}
									{
										position144, tokenIndex144 := position, tokenIndex
										if !_rules[ruleFROM_NOW]() {
											goto l144
										}
										goto l145
									l144:
										position, tokenIndex = position144, tokenIndex144
									}
								l145:
								}
							l140:
								{
									add(ruleAction28, position)
								}
								goto l136
							l139:
								position, tokenIndex = position136, tokenIndex136
								if !_rules[ruleLast]() {
									goto l147
								}
								{
									position148, tokenIndex148 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l148
									}
									goto l149
								l148:
									position, tokenIndex = position148, tokenIndex148
								}
							l149:
								if !_rules[ruleYEARS]() {
									goto l147
								}
								{
									add(ruleAction29, position)
								}
								goto l136
							l147:
								position, tokenIndex = position136, tokenIndex136
								if !_rules[ruleNext]() {
									goto l151
								}
								{
									position152, tokenIndex152 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l152
									}
									goto l153
								l152:
									position, tokenIndex = position152, tokenIndex152
								}
							l153:
								if !_rules[ruleYEARS]() {
									goto l151
								}
								{
									add(ruleAction30, position)
								}
								goto l136
							l151:
								position, tokenIndex = position136, tokenIndex136
								if !_rules[ruleLAST]() {
									goto l155
								}
								if !_rules[ruleYEARS]() {
									goto l155
								}
								{
									add(ruleAction31, position)
								}
								goto l136
							l155:
								position, tokenIndex = position136, tokenIndex136
								if !_rules[ruleNEXT]() {
									goto l134
								}
								if !_rules[ruleYEARS]() {
									goto l134
								}
								{
									add(ruleAction32, position)
								}
							}
						l136:
							add(ruleRelativeYear, position135)
						}
						goto l5
					l134:
						position, tokenIndex = position5, tokenIndex5
						{
							position159 := position
							{
								position160, tokenIndex160 := position, tokenIndex
								if !_rules[ruleNumber]() {
									goto l161
								}
								{
									position162 := position
									{
										switch buffer[position] {
										case 't':
											if buffer[position] != rune('t') {
												goto l161
											}
											position++
											if buffer[position] != rune('h') {
												goto l161
											}
											position++
											break
										case 'r':
											if buffer[position] != rune('r') {
												goto l161
											}
											position++
											if buffer[position] != rune('d') {
												goto l161
											}
											position++
											break
										case 'n':
											if buffer[position] != rune('n') {
												goto l161
											}
											position++
											if buffer[position] != rune('d') {
												goto l161
											}
											position++
											break
										default:
											if buffer[position] != rune('s') {
												goto l161
											}
											position++
											if buffer[position] != rune('t') {
												goto l161
											}
											position++
											break
										}
									}

									if !_rules[rule_]() {
										goto l161
									}
									add(ruleOrdinal, position162)
								}
								goto l160
							l161:
								position, tokenIndex = position160, tokenIndex160
								if !_rules[ruleLast]() {
									goto l158
								}
								{
									position164, tokenIndex164 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l164
									}
									goto l165
								l164:
									position, tokenIndex = position164, tokenIndex164
								}
							l165:
								if !_rules[ruleNumber]() {
									goto l158
								}
							}
						l160:
							{
								add(ruleAction38, position)
							}
							add(ruleDate, position159)
						}
						goto l5
					l158:
						position, tokenIndex = position5, tokenIndex5
						{
							position168 := position
							{
								position169, tokenIndex169 := position, tokenIndex
								{
									position171 := position
									{
										position172, tokenIndex172 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l173
										}
										{
											add(ruleAction39, position)
										}
										{
											position175, tokenIndex175 := position, tokenIndex
											if !_rules[ruleMinutes]() {
												goto l175
											}
											{
												position177, tokenIndex177 := position, tokenIndex
												if !_rules[ruleSeconds]() {
													goto l177
												}
												goto l178
											l177:
												position, tokenIndex = position177, tokenIndex177
											}
										l178:
											goto l176
										l175:
											position, tokenIndex = position175, tokenIndex175
										}
									l176:
										{
											position179 := position
											if buffer[position] != rune('a') {
												goto l173
											}
											position++
											if buffer[position] != rune('m') {
												goto l173
											}
											position++
											if !_rules[rule_]() {
												goto l173
											}
											add(ruleAM, position179)
										}
										goto l172
									l173:
										position, tokenIndex = position172, tokenIndex172
										if !_rules[ruleNumber]() {
											goto l170
										}
										{
											add(ruleAction40, position)
										}
										{
											position181, tokenIndex181 := position, tokenIndex
											if !_rules[ruleMinutes]() {
												goto l181
											}
											{
												position183, tokenIndex183 := position, tokenIndex
												if !_rules[ruleSeconds]() {
													goto l183
												}
												goto l184
											l183:
												position, tokenIndex = position183, tokenIndex183
											}
										l184:
											goto l182
										l181:
											position, tokenIndex = position181, tokenIndex181
										}
									l182:
										{
											position185 := position
											if buffer[position] != rune('p') {
												goto l170
											}
											position++
											if buffer[position] != rune('m') {
												goto l170
											}
											position++
											if !_rules[rule_]() {
												goto l170
											}
											add(rulePM, position185)
										}
									}
								l172:
									add(ruleClock12Hour, position171)
								}
								goto l169
							l170:
								position, tokenIndex = position169, tokenIndex169
								{
									position186 := position
									if !_rules[ruleNumber]() {
										goto l167
									}
									{
										add(ruleAction41, position)
									}
									{
										position188, tokenIndex188 := position, tokenIndex
										if !_rules[ruleMinutes]() {
											goto l188
										}
										{
											position190, tokenIndex190 := position, tokenIndex
											if !_rules[ruleSeconds]() {
												goto l190
											}
											goto l191
										l190:
											position, tokenIndex = position190, tokenIndex190
										}
									l191:
										goto l189
									l188:
										position, tokenIndex = position188, tokenIndex188
									}
								l189:
									add(ruleClock24Hour, position186)
								}
							}
						l169:
							add(ruleTime, position168)
						}
						goto l5
					l167:
						position, tokenIndex = position5, tokenIndex5
						{
							position192 := position
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l0
							}
							position++
						l193:
							{
								position194, tokenIndex194 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('z') {
									goto l194
								}
								position++
								goto l193
							l194:
								position, tokenIndex = position194, tokenIndex194
							}
							if !_rules[rule_]() {
								goto l0
							}
							add(ruleWord, position192)
						}
					}
				l5:
					add(ruleExpr, position4)
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					{
						position195 := position
						{
							position196, tokenIndex196 := position, tokenIndex
							{
								position198 := position
								if buffer[position] != rune('n') {
									goto l197
								}
								position++
								if buffer[position] != rune('o') {
									goto l197
								}
								position++
								if buffer[position] != rune('w') {
									goto l197
								}
								position++
								if !_rules[rule_]() {
									goto l197
								}
								add(ruleNOW, position198)
							}
							goto l196
						l197:
							position, tokenIndex = position196, tokenIndex196
							{
								position200 := position
								{
									position201, tokenIndex201 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l202
									}
									if !_rules[ruleMINUTES]() {
										goto l202
									}
									if !_rules[ruleAGO]() {
										goto l202
									}
									{
										add(ruleAction0, position)
									}
									goto l201
								l202:
									position, tokenIndex = position201, tokenIndex201
									{
										position205, tokenIndex205 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l206
										}
										if !_rules[ruleMINUTES]() {
											goto l206
										}
										if !_rules[ruleFROM_NOW]() {
											goto l206
										}
										goto l205
									l206:
										position, tokenIndex = position205, tokenIndex205
										if !_rules[ruleIn]() {
											goto l204
										}
										{
											position207, tokenIndex207 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l207
											}
											goto l208
										l207:
											position, tokenIndex = position207, tokenIndex207
										}
									l208:
										if !_rules[ruleMINUTES]() {
											goto l204
										}
										{
											position209, tokenIndex209 := position, tokenIndex
											if !_rules[ruleFROM_NOW]() {
												goto l209
											}
											goto l210
										l209:
											position, tokenIndex = position209, tokenIndex209
										}
									l210:
									}
								l205:
									{
										add(ruleAction1, position)
									}
									goto l201
								l204:
									position, tokenIndex = position201, tokenIndex201
									if !_rules[ruleLast]() {
										goto l212
									}
									{
										position213, tokenIndex213 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l213
										}
										goto l214
									l213:
										position, tokenIndex = position213, tokenIndex213
									}
								l214:
									if !_rules[ruleMINUTES]() {
										goto l212
									}
									{
										add(ruleAction2, position)
									}
									goto l201
								l212:
									position, tokenIndex = position201, tokenIndex201
									if !_rules[ruleNext]() {
										goto l216
									}
									{
										position217, tokenIndex217 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l217
										}
										goto l218
									l217:
										position, tokenIndex = position217, tokenIndex217
									}
								l218:
									if !_rules[ruleMINUTES]() {
										goto l216
									}
									{
										add(ruleAction3, position)
									}
									goto l201
								l216:
									position, tokenIndex = position201, tokenIndex201
									if !_rules[ruleNumber]() {
										goto l199
									}
									if !_rules[ruleMINUTES]() {
										goto l199
									}
									{
										add(ruleAction4, position)
									}
								}
							l201:
								add(ruleRelativeMinutes, position200)
							}
							goto l196
						l199:
							position, tokenIndex = position196, tokenIndex196
							{
								position222 := position
								{
									position223, tokenIndex223 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l224
									}
									if !_rules[ruleHOURS]() {
										goto l224
									}
									if !_rules[ruleAGO]() {
										goto l224
									}
									{
										add(ruleAction5, position)
									}
									goto l223
								l224:
									position, tokenIndex = position223, tokenIndex223
									{
										position227, tokenIndex227 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l228
										}
										if !_rules[ruleHOURS]() {
											goto l228
										}
										if !_rules[ruleFROM_NOW]() {
											goto l228
										}
										goto l227
									l228:
										position, tokenIndex = position227, tokenIndex227
										if !_rules[ruleIn]() {
											goto l226
										}
										{
											position229, tokenIndex229 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l229
											}
											goto l230
										l229:
											position, tokenIndex = position229, tokenIndex229
										}
									l230:
										if !_rules[ruleHOURS]() {
											goto l226
										}
										{
											position231, tokenIndex231 := position, tokenIndex
											if !_rules[ruleFROM_NOW]() {
												goto l231
											}
											goto l232
										l231:
											position, tokenIndex = position231, tokenIndex231
										}
									l232:
									}
								l227:
									{
										add(ruleAction6, position)
									}
									goto l223
								l226:
									position, tokenIndex = position223, tokenIndex223
									if !_rules[ruleLast]() {
										goto l234
									}
									{
										position235, tokenIndex235 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l235
										}
										goto l236
									l235:
										position, tokenIndex = position235, tokenIndex235
									}
								l236:
									if !_rules[ruleHOURS]() {
										goto l234
									}
									{
										add(ruleAction7, position)
									}
									goto l223
								l234:
									position, tokenIndex = position223, tokenIndex223
									if !_rules[ruleNext]() {
										goto l238
									}
									{
										position239, tokenIndex239 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l239
										}
										goto l240
									l239:
										position, tokenIndex = position239, tokenIndex239
									}
								l240:
									if !_rules[ruleHOURS]() {
										goto l238
									}
									{
										add(ruleAction8, position)
									}
									goto l223
								l238:
									position, tokenIndex = position223, tokenIndex223
									if !_rules[ruleNumber]() {
										goto l221
									}
									if !_rules[ruleHOURS]() {
										goto l221
									}
									{
										add(ruleAction9, position)
									}
								}
							l223:
								add(ruleRelativeHours, position222)
							}
							goto l196
						l221:
							position, tokenIndex = position196, tokenIndex196
							{
								position244 := position
								{
									position245, tokenIndex245 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l246
									}
									if !_rules[ruleDAYS]() {
										goto l246
									}
									if !_rules[ruleAGO]() {
										goto l246
									}
									{
										add(ruleAction10, position)
									}
									goto l245
								l246:
									position, tokenIndex = position245, tokenIndex245
									{
										position249, tokenIndex249 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l250
										}
										if !_rules[ruleDAYS]() {
											goto l250
										}
										if !_rules[ruleFROM_NOW]() {
											goto l250
										}
										goto l249
									l250:
										position, tokenIndex = position249, tokenIndex249
										if !_rules[ruleIn]() {
											goto l248
										}
										{
											position251, tokenIndex251 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l251
											}
											goto l252
										l251:
											position, tokenIndex = position251, tokenIndex251
										}
									l252:
										if !_rules[ruleDAYS]() {
											goto l248
										}
										{
											position253, tokenIndex253 := position, tokenIndex
											if !_rules[ruleFROM_NOW]() {
												goto l253
											}
											goto l254
										l253:
											position, tokenIndex = position253, tokenIndex253
										}
									l254:
									}
								l249:
									{
										add(ruleAction11, position)
									}
									goto l245
								l248:
									position, tokenIndex = position245, tokenIndex245
									if !_rules[ruleLast]() {
										goto l256
									}
									{
										position257, tokenIndex257 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l257
										}
										goto l258
									l257:
										position, tokenIndex = position257, tokenIndex257
									}
								l258:
									if !_rules[ruleDAYS]() {
										goto l256
									}
									{
										add(ruleAction12, position)
									}
									goto l245
								l256:
									position, tokenIndex = position245, tokenIndex245
									if !_rules[ruleNext]() {
										goto l260
									}
									{
										position261, tokenIndex261 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l261
										}
										goto l262
									l261:
										position, tokenIndex = position261, tokenIndex261
									}
								l262:
									if !_rules[ruleDAYS]() {
										goto l260
									}
									{
										add(ruleAction13, position)
									}
									goto l245
								l260:
									position, tokenIndex = position245, tokenIndex245
									if !_rules[ruleNumber]() {
										goto l243
									}
									if !_rules[ruleDAYS]() {
										goto l243
									}
									{
										add(ruleAction14, position)
									}
								}
							l245:
								add(ruleRelativeDays, position244)
							}
							goto l196
						l243:
							position, tokenIndex = position196, tokenIndex196
							{
								position266 := position
								{
									position267, tokenIndex267 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l268
									}
									if !_rules[ruleWEEKS]() {
										goto l268
									}
									if !_rules[ruleAGO]() {
										goto l268
									}
									{
										add(ruleAction15, position)
									}
									goto l267
								l268:
									position, tokenIndex = position267, tokenIndex267
									{
										position271, tokenIndex271 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l272
										}
										if !_rules[ruleWEEKS]() {
											goto l272
										}
										if !_rules[ruleFROM_NOW]() {
											goto l272
										}
										goto l271
									l272:
										position, tokenIndex = position271, tokenIndex271
										if !_rules[ruleIn]() {
											goto l270
										}
										{
											position273, tokenIndex273 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l273
											}
											goto l274
										l273:
											position, tokenIndex = position273, tokenIndex273
										}
									l274:
										if !_rules[ruleWEEKS]() {
											goto l270
										}
										{
											position275, tokenIndex275 := position, tokenIndex
											if !_rules[ruleFROM_NOW]() {
												goto l275
											}
											goto l276
										l275:
											position, tokenIndex = position275, tokenIndex275
										}
									l276:
									}
								l271:
									{
										add(ruleAction16, position)
									}
									goto l267
								l270:
									position, tokenIndex = position267, tokenIndex267
									if !_rules[ruleLast]() {
										goto l278
									}
									{
										position279, tokenIndex279 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l279
										}
										goto l280
									l279:
										position, tokenIndex = position279, tokenIndex279
									}
								l280:
									if !_rules[ruleWEEKS]() {
										goto l278
									}
									{
										add(ruleAction17, position)
									}
									goto l267
								l278:
									position, tokenIndex = position267, tokenIndex267
									if !_rules[ruleNext]() {
										goto l282
									}
									{
										position283, tokenIndex283 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l283
										}
										goto l284
									l283:
										position, tokenIndex = position283, tokenIndex283
									}
								l284:
									if !_rules[ruleWEEKS]() {
										goto l282
									}
									{
										add(ruleAction18, position)
									}
									goto l267
								l282:
									position, tokenIndex = position267, tokenIndex267
									if !_rules[ruleNumber]() {
										goto l265
									}
									if !_rules[ruleWEEKS]() {
										goto l265
									}
									{
										add(ruleAction19, position)
									}
								}
							l267:
								add(ruleRelativeWeeks, position266)
							}
							goto l196
						l265:
							position, tokenIndex = position196, tokenIndex196
							{
								position288 := position
								{
									position289, tokenIndex289 := position, tokenIndex
									{
										position291 := position
										if buffer[position] != rune('t') {
											goto l290
										}
										position++
										if buffer[position] != rune('o') {
											goto l290
										}
										position++
										if buffer[position] != rune('d') {
											goto l290
										}
										position++
										if buffer[position] != rune('a') {
											goto l290
										}
										position++
										if buffer[position] != rune('y') {
											goto l290
										}
										position++
										if !_rules[rule_]() {
											goto l290
										}
										add(ruleTODAY, position291)
									}
									{
										add(ruleAction33, position)
									}
									goto l289
								l290:
									position, tokenIndex = position289, tokenIndex289
									{
										switch buffer[position] {
										case 'n':
											if !_rules[ruleNEXT]() {
												goto l287
											}
											if !_rules[ruleWeekday]() {
												goto l287
											}
											{
												add(ruleAction36, position)
											}
											break
										case 'y':
											{
												position295 := position
												if buffer[position] != rune('y') {
													goto l287
												}
												position++
												if buffer[position] != rune('e') {
													goto l287
												}
												position++
												if buffer[position] != rune('s') {
													goto l287
												}
												position++
												if buffer[position] != rune('t') {
													goto l287
												}
												position++
												if buffer[position] != rune('e') {
													goto l287
												}
												position++
												if buffer[position] != rune('r') {
													goto l287
												}
												position++
												if buffer[position] != rune('d') {
													goto l287
												}
												position++
												if buffer[position] != rune('a') {
													goto l287
												}
												position++
												if buffer[position] != rune('y') {
													goto l287
												}
												position++
												if !_rules[rule_]() {
													goto l287
												}
												add(ruleYESTERDAY, position295)
											}
											{
												add(ruleAction34, position)
											}
											break
										case 'l', 'p':
											if !_rules[ruleLAST]() {
												goto l287
											}
											if !_rules[ruleWeekday]() {
												goto l287
											}
											{
												add(ruleAction35, position)
											}
											break
										default:
											if !_rules[ruleWeekday]() {
												goto l287
											}
											{
												add(ruleAction37, position)
											}
											break
										}
									}

								}
							l289:
								add(ruleRelativeWeekdays, position288)
							}
							goto l196
						l287:
							position, tokenIndex = position196, tokenIndex196
							{
								position300 := position
								{
									position301, tokenIndex301 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l302
									}
									if !_rules[ruleMONTHS]() {
										goto l302
									}
									if !_rules[ruleAGO]() {
										goto l302
									}
									{
										add(ruleAction20, position)
									}
									goto l301
								l302:
									position, tokenIndex = position301, tokenIndex301
									{
										position305, tokenIndex305 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l306
										}
										if !_rules[ruleMONTHS]() {
											goto l306
										}
										if !_rules[ruleFROM_NOW]() {
											goto l306
										}
										goto l305
									l306:
										position, tokenIndex = position305, tokenIndex305
										if !_rules[ruleIn]() {
											goto l304
										}
										{
											position307, tokenIndex307 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l307
											}
											goto l308
										l307:
											position, tokenIndex = position307, tokenIndex307
										}
									l308:
										if !_rules[ruleMONTHS]() {
											goto l304
										}
										{
											position309, tokenIndex309 := position, tokenIndex
											if !_rules[ruleFROM_NOW]() {
												goto l309
											}
											goto l310
										l309:
											position, tokenIndex = position309, tokenIndex309
										}
									l310:
									}
								l305:
									{
										add(ruleAction21, position)
									}
									goto l301
								l304:
									position, tokenIndex = position301, tokenIndex301
									if !_rules[ruleLast]() {
										goto l312
									}
									{
										position313, tokenIndex313 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l313
										}
										goto l314
									l313:
										position, tokenIndex = position313, tokenIndex313
									}
								l314:
									if !_rules[ruleMONTHS]() {
										goto l312
									}
									{
										add(ruleAction22, position)
									}
									goto l301
								l312:
									position, tokenIndex = position301, tokenIndex301
									if !_rules[ruleNext]() {
										goto l316
									}
									{
										position317, tokenIndex317 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l317
										}
										goto l318
									l317:
										position, tokenIndex = position317, tokenIndex317
									}
								l318:
									if !_rules[ruleMONTHS]() {
										goto l316
									}
									{
										add(ruleAction23, position)
									}
									goto l301
								l316:
									position, tokenIndex = position301, tokenIndex301
									if !_rules[ruleLAST]() {
										goto l320
									}
									if !_rules[ruleMonth]() {
										goto l320
									}
									{
										add(ruleAction24, position)
									}
									goto l301
								l320:
									position, tokenIndex = position301, tokenIndex301
									if !_rules[ruleNEXT]() {
										goto l322
									}
									if !_rules[ruleMonth]() {
										goto l322
									}
									{
										add(ruleAction25, position)
									}
									goto l301
								l322:
									position, tokenIndex = position301, tokenIndex301
									if !_rules[ruleMonth]() {
										goto l299
									}
									{
										add(ruleAction26, position)
									}
								}
							l301:
								add(ruleRelativeMonth, position300)
							}
							goto l196
						l299:
							position, tokenIndex = position196, tokenIndex196
							{
								position326 := position
								{
									position327, tokenIndex327 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l328
									}
									if !_rules[ruleYEARS]() {
										goto l328
									}
									if !_rules[ruleAGO]() {
										goto l328
									}
									{
										add(ruleAction27, position)
									}
									goto l327
								l328:
									position, tokenIndex = position327, tokenIndex327
									{
										position331, tokenIndex331 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l332
										}
										if !_rules[ruleYEARS]() {
											goto l332
										}
										if !_rules[ruleFROM_NOW]() {
											goto l332
										}
										goto l331
									l332:
										position, tokenIndex = position331, tokenIndex331
										if !_rules[ruleIn]() {
											goto l330
										}
										{
											position333, tokenIndex333 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l333
											}
											goto l334
										l333:
											position, tokenIndex = position333, tokenIndex333
										}
									l334:
										if !_rules[ruleYEARS]() {
											goto l330
										}
										{
											position335, tokenIndex335 := position, tokenIndex
											if !_rules[ruleFROM_NOW]() {
												goto l335
											}
											goto l336
										l335:
											position, tokenIndex = position335, tokenIndex335
										}
									l336:
									}
								l331:
									{
										add(ruleAction28, position)
									}
									goto l327
								l330:
									position, tokenIndex = position327, tokenIndex327
									if !_rules[ruleLast]() {
										goto l338
									}
									{
										position339, tokenIndex339 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l339
										}
										goto l340
									l339:
										position, tokenIndex = position339, tokenIndex339
									}
								l340:
									if !_rules[ruleYEARS]() {
										goto l338
									}
									{
										add(ruleAction29, position)
									}
									goto l327
								l338:
									position, tokenIndex = position327, tokenIndex327
									if !_rules[ruleNext]() {
										goto l342
									}
									{
										position343, tokenIndex343 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l343
										}
										goto l344
									l343:
										position, tokenIndex = position343, tokenIndex343
									}
								l344:
									if !_rules[ruleYEARS]() {
										goto l342
									}
									{
										add(ruleAction30, position)
									}
									goto l327
								l342:
									position, tokenIndex = position327, tokenIndex327
									if !_rules[ruleLAST]() {
										goto l346
									}
									if !_rules[ruleYEARS]() {
										goto l346
									}
									{
										add(ruleAction31, position)
									}
									goto l327
								l346:
									position, tokenIndex = position327, tokenIndex327
									if !_rules[ruleNEXT]() {
										goto l325
									}
									if !_rules[ruleYEARS]() {
										goto l325
									}
									{
										add(ruleAction32, position)
									}
								}
							l327:
								add(ruleRelativeYear, position326)
							}
							goto l196
						l325:
							position, tokenIndex = position196, tokenIndex196
							{
								position350 := position
								{
									position351, tokenIndex351 := position, tokenIndex
									if !_rules[ruleNumber]() {
										goto l352
									}
									{
										position353 := position
										{
											switch buffer[position] {
											case 't':
												if buffer[position] != rune('t') {
													goto l352
												}
												position++
												if buffer[position] != rune('h') {
													goto l352
												}
												position++
												break
											case 'r':
												if buffer[position] != rune('r') {
													goto l352
												}
												position++
												if buffer[position] != rune('d') {
													goto l352
												}
												position++
												break
											case 'n':
												if buffer[position] != rune('n') {
													goto l352
												}
												position++
												if buffer[position] != rune('d') {
													goto l352
												}
												position++
												break
											default:
												if buffer[position] != rune('s') {
													goto l352
												}
												position++
												if buffer[position] != rune('t') {
													goto l352
												}
												position++
												break
											}
										}

										if !_rules[rule_]() {
											goto l352
										}
										add(ruleOrdinal, position353)
									}
									goto l351
								l352:
									position, tokenIndex = position351, tokenIndex351
									if !_rules[ruleLast]() {
										goto l349
									}
									{
										position355, tokenIndex355 := position, tokenIndex
										if !_rules[ruleNumber]() {
											goto l355
										}
										goto l356
									l355:
										position, tokenIndex = position355, tokenIndex355
									}
								l356:
									if !_rules[ruleNumber]() {
										goto l349
									}
								}
							l351:
								{
									add(ruleAction38, position)
								}
								add(ruleDate, position350)
							}
							goto l196
						l349:
							position, tokenIndex = position196, tokenIndex196
							{
								position359 := position
								{
									position360, tokenIndex360 := position, tokenIndex
									{
										position362 := position
										{
											position363, tokenIndex363 := position, tokenIndex
											if !_rules[ruleNumber]() {
												goto l364
											}
											{
												add(ruleAction39, position)
											}
											{
												position366, tokenIndex366 := position, tokenIndex
												if !_rules[ruleMinutes]() {
													goto l366
												}
												{
													position368, tokenIndex368 := position, tokenIndex
													if !_rules[ruleSeconds]() {
														goto l368
													}
													goto l369
												l368:
													position, tokenIndex = position368, tokenIndex368
												}
											l369:
												goto l367
											l366:
												position, tokenIndex = position366, tokenIndex366
											}
										l367:
											{
												position370 := position
												if buffer[position] != rune('a') {
													goto l364
												}
												position++
												if buffer[position] != rune('m') {
													goto l364
												}
												position++
												if !_rules[rule_]() {
													goto l364
												}
												add(ruleAM, position370)
											}
											goto l363
										l364:
											position, tokenIndex = position363, tokenIndex363
											if !_rules[ruleNumber]() {
												goto l361
											}
											{
												add(ruleAction40, position)
											}
											{
												position372, tokenIndex372 := position, tokenIndex
												if !_rules[ruleMinutes]() {
													goto l372
												}
												{
													position374, tokenIndex374 := position, tokenIndex
													if !_rules[ruleSeconds]() {
														goto l374
													}
													goto l375
												l374:
													position, tokenIndex = position374, tokenIndex374
												}
											l375:
												goto l373
											l372:
												position, tokenIndex = position372, tokenIndex372
											}
										l373:
											{
												position376 := position
												if buffer[position] != rune('p') {
													goto l361
												}
												position++
												if buffer[position] != rune('m') {
													goto l361
												}
												position++
												if !_rules[rule_]() {
													goto l361
												}
												add(rulePM, position376)
											}
										}
									l363:
										add(ruleClock12Hour, position362)
									}
									goto l360
								l361:
									position, tokenIndex = position360, tokenIndex360
									{
										position377 := position
										if !_rules[ruleNumber]() {
											goto l358
										}
										{
											add(ruleAction41, position)
										}
										{
											position379, tokenIndex379 := position, tokenIndex
											if !_rules[ruleMinutes]() {
												goto l379
											}
											{
												position381, tokenIndex381 := position, tokenIndex
												if !_rules[ruleSeconds]() {
													goto l381
												}
												goto l382
											l381:
												position, tokenIndex = position381, tokenIndex381
											}
										l382:
											goto l380
										l379:
											position, tokenIndex = position379, tokenIndex379
										}
									l380:
										add(ruleClock24Hour, position377)
									}
								}
							l360:
								add(ruleTime, position359)
							}
							goto l196
						l358:
							position, tokenIndex = position196, tokenIndex196
							{
								position383 := position
								if c := buffer[position]; c < rune('a') || c > rune('z') {
									goto l3
								}
								position++
							l384:
								{
									position385, tokenIndex385 := position, tokenIndex
									if c := buffer[position]; c < rune('a') || c > rune('z') {
										goto l385
									}
									position++
									goto l384
								l385:
									position, tokenIndex = position385, tokenIndex385
								}
								if !_rules[rule_]() {
									goto l3
								}
								add(ruleWord, position383)
							}
						}
					l196:
						add(ruleExpr, position195)
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				{
					position386 := position
					{
						position387, tokenIndex387 := position, tokenIndex
						if !matchDot() {
							goto l387
						}
						goto l0
					l387:
						position, tokenIndex = position387, tokenIndex387
					}
					add(ruleEOF, position386)
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / RelativeMinutes / RelativeHours / RelativeDays / RelativeWeeks / RelativeWeekdays / RelativeMonth / RelativeYear / Date / Time / Word)> */
		nil,
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action0) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action1) / (Last Number? MINUTES Action2) / (Next Number? MINUTES Action3) / (Number MINUTES Action4))> */
		nil,
		/* 3 RelativeHours <- <((Number HOURS AGO Action5) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action6) / (Last Number? HOURS Action7) / (Next Number? HOURS Action8) / (Number HOURS Action9))> */
		nil,
		/* 4 RelativeDays <- <((Number DAYS AGO Action10) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action11) / (Last Number? DAYS Action12) / (Next Number? DAYS Action13) / (Number DAYS Action14))> */
		nil,
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action15) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action16) / (Last Number? WEEKS Action17) / (Next Number? WEEKS Action18) / (Number WEEKS Action19))> */
		nil,
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action20) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action21) / (Last Number? MONTHS Action22) / (Next Number? MONTHS Action23) / (LAST Month Action24) / (NEXT Month Action25) / (Month Action26))> */
		nil,
		/* 7 RelativeYear <- <((Number YEARS AGO Action27) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action28) / (Last Number? YEARS Action29) / (Next Number? YEARS Action30) / (LAST YEARS Action31) / (NEXT YEARS Action32))> */
		nil,
		/* 8 RelativeWeekdays <- <((TODAY Action33) / ((&('n') (NEXT Weekday Action36)) | (&('y') (YESTERDAY Action34)) | (&('l' | 'p') (LAST Weekday Action35)) | (&('f' | 'm' | 's' | 't' | 'w') (Weekday Action37))))> */
		nil,
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action38)> */
		nil,
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		nil,
		/* 11 Clock12Hour <- <((Number Action39 (Minutes Seconds?)? AM) / (Number Action40 (Minutes Seconds?)? PM))> */
		nil,
		/* 12 Clock24Hour <- <(Number Action41 (Minutes Seconds?)?)> */
		nil,
		/* 13 Minutes <- <(':' Number Action42)> */
		func() bool {
			position400, tokenIndex400 := position, tokenIndex
			{
				position401 := position
				if buffer[position] != rune(':') {
					goto l400
				}
				position++
				if !_rules[ruleNumber]() {
					goto l400
				}
				{
					add(ruleAction42, position)
				}
				add(ruleMinutes, position401)
			}
			return true
		l400:
			position, tokenIndex = position400, tokenIndex400
			return false
		},
		/* 14 Seconds <- <(':' Number Action43)> */
		func() bool {
			position403, tokenIndex403 := position, tokenIndex
			{
				position404 := position
				if buffer[position] != rune(':') {
					goto l403
				}
				position++
				if !_rules[ruleNumber]() {
					goto l403
				}
				{
					add(ruleAction43, position)
				}
				add(ruleSeconds, position404)
			}
			return true
		l403:
			position, tokenIndex = position403, tokenIndex403
			return false
		},
		/* 15 Number <- <(('t' 'w' 'o' _ Action46) / ('t' 'h' 'r' 'e' 'e' _ Action47) / ('f' 'o' 'u' 'r' _ Action48) / ('s' 'i' 'x' _ Action50) / ((&('t') ('t' 'e' 'n' _ Action54)) | (&('n') ('n' 'i' 'n' 'e' _ Action53)) | (&('e') ('e' 'i' 'g' 'h' 't' _ Action52)) | (&('s') ('s' 'e' 'v' 'e' 'n' _ Action51)) | (&('f') ('f' 'i' 'v' 'e' _ Action49)) | (&('o') ('o' 'n' 'e' _ Action45)) | (&('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') (<[0-9]+> _ Action44))))> */
		func() bool {
			position406, tokenIndex406 := position, tokenIndex
			{
				position407 := position
				{
					position408, tokenIndex408 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l409
					}
					position++
					if buffer[position] != rune('w') {
						goto l409
					}
					position++
					if buffer[position] != rune('o') {
						goto l409
					}
					position++
					if !_rules[rule_]() {
						goto l409
					}
					{
						add(ruleAction46, position)
					}
					goto l408
				l409:
					position, tokenIndex = position408, tokenIndex408
					if buffer[position] != rune('t') {
						goto l411
					}
					position++
					if buffer[position] != rune('h') {
						goto l411
					}
					position++
					if buffer[position] != rune('r') {
						goto l411
					}
					position++
					if buffer[position] != rune('e') {
						goto l411
					}
					position++
					if buffer[position] != rune('e') {
						goto l411
					}
					position++
					if !_rules[rule_]() {
						goto l411
					}
					{
						add(ruleAction47, position)
					}
					goto l408
				l411:
					position, tokenIndex = position408, tokenIndex408
					if buffer[position] != rune('f') {
						goto l413
					}
					position++
					if buffer[position] != rune('o') {
						goto l413
					}
					position++
					if buffer[position] != rune('u') {
						goto l413
					}
					position++
					if buffer[position] != rune('r') {
						goto l413
					}
					position++
					if !_rules[rule_]() {
						goto l413
					}
					{
						add(ruleAction48, position)
					}
					goto l408
				l413:
					position, tokenIndex = position408, tokenIndex408
					if buffer[position] != rune('s') {
						goto l415
					}
					position++
					if buffer[position] != rune('i') {
						goto l415
					}
					position++
					if buffer[position] != rune('x') {
						goto l415
					}
					position++
					if !_rules[rule_]() {
						goto l415
					}
					{
						add(ruleAction50, position)
					}
					goto l408
				l415:
					position, tokenIndex = position408, tokenIndex408
					{
						switch buffer[position] {
						case 't':
							if buffer[position] != rune('t') {
								goto l406
							}
							position++
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if buffer[position] != rune('n') {
								goto l406
							}
							position++
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction54, position)
							}
							break
						case 'n':
							if buffer[position] != rune('n') {
								goto l406
							}
							position++
							if buffer[position] != rune('i') {
								goto l406
							}
							position++
							if buffer[position] != rune('n') {
								goto l406
							}
							position++
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction53, position)
							}
							break
						case 'e':
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if buffer[position] != rune('i') {
								goto l406
							}
							position++
							if buffer[position] != rune('g') {
								goto l406
							}
							position++
							if buffer[position] != rune('h') {
								goto l406
							}
							position++
							if buffer[position] != rune('t') {
								goto l406
							}
							position++
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction52, position)
							}
							break
						case 's':
							if buffer[position] != rune('s') {
								goto l406
							}
							position++
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if buffer[position] != rune('v') {
								goto l406
							}
							position++
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if buffer[position] != rune('n') {
								goto l406
							}
							position++
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction51, position)
							}
							break
						case 'f':
							if buffer[position] != rune('f') {
								goto l406
							}
							position++
							if buffer[position] != rune('i') {
								goto l406
							}
							position++
							if buffer[position] != rune('v') {
								goto l406
							}
							position++
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction49, position)
							}
							break
						case 'o':
							if buffer[position] != rune('o') {
								goto l406
							}
							position++
							if buffer[position] != rune('n') {
								goto l406
							}
							position++
							if buffer[position] != rune('e') {
								goto l406
							}
							position++
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction45, position)
							}
							break
						default:
							{
								position424 := position
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l406
								}
								position++
							l425:
								{
									position426, tokenIndex426 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l426
									}
									position++
									goto l425
								l426:
									position, tokenIndex = position426, tokenIndex426
								}
								add(rulePegText, position424)
							}
							if !_rules[rule_]() {
								goto l406
							}
							{
								add(ruleAction44, position)
							}
							break
						}
					}

				}
			l408:
				add(ruleNumber, position407)
			}
			return true
		l406:
			position, tokenIndex = position406, tokenIndex406
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action55) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action57) / ((&('s') ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action61)) | (&('f') ('f' 'r' 'i' 'd' 'a' 'y' _ Action60)) | (&('t') ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action59)) | (&('w') ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action58)) | (&('m') ('m' 'o' 'n' 'd' 'a' 'y' _ Action56))))> */
		func() bool {
			position428, tokenIndex428 := position, tokenIndex
			{
				position429 := position
				{
					position430, tokenIndex430 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l431
					}
					position++
					if buffer[position] != rune('u') {
						goto l431
					}
					position++
					if buffer[position] != rune('n') {
						goto l431
					}
					position++
					if buffer[position] != rune('d') {
						goto l431
					}
					position++
					if buffer[position] != rune('a') {
						goto l431
					}
					position++
					if buffer[position] != rune('y') {
						goto l431
					}
					position++
					if !_rules[rule_]() {
						goto l431
					}
					{
						add(ruleAction55, position)
					}
					goto l430
				l431:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('t') {
						goto l433
					}
					position++
					if buffer[position] != rune('u') {
						goto l433
					}
					position++
					if buffer[position] != rune('e') {
						goto l433
					}
					position++
					if buffer[position] != rune('s') {
						goto l433
					}
					position++
					if buffer[position] != rune('d') {
						goto l433
					}
					position++
					if buffer[position] != rune('a') {
						goto l433
					}
					position++
					if buffer[position] != rune('y') {
						goto l433
					}
					position++
					if !_rules[rule_]() {
						goto l433
					}
					{
						add(ruleAction57, position)
					}
					goto l430
				l433:
					position, tokenIndex = position430, tokenIndex430
					{
						switch buffer[position] {
						case 's':
							if buffer[position] != rune('s') {
								goto l428
							}
							position++
							if buffer[position] != rune('a') {
								goto l428
							}
							position++
							if buffer[position] != rune('t') {
								goto l428
							}
							position++
							if buffer[position] != rune('u') {
								goto l428
							}
							position++
							if buffer[position] != rune('r') {
								goto l428
							}
							position++
							if buffer[position] != rune('d') {
								goto l428
							}
							position++
							if buffer[position] != rune('a') {
								goto l428
							}
							position++
							if buffer[position] != rune('y') {
								goto l428
							}
							position++
							if !_rules[rule_]() {
								goto l428
							}
							{
								add(ruleAction61, position)
							}
							break
						case 'f':
							if buffer[position] != rune('f') {
								goto l428
							}
							position++
							if buffer[position] != rune('r') {
								goto l428
							}
							position++
							if buffer[position] != rune('i') {
								goto l428
							}
							position++
							if buffer[position] != rune('d') {
								goto l428
							}
							position++
							if buffer[position] != rune('a') {
								goto l428
							}
							position++
							if buffer[position] != rune('y') {
								goto l428
							}
							position++
							if !_rules[rule_]() {
								goto l428
							}
							{
								add(ruleAction60, position)
							}
							break
						case 't':
							if buffer[position] != rune('t') {
								goto l428
							}
							position++
							if buffer[position] != rune('h') {
								goto l428
							}
							position++
							if buffer[position] != rune('u') {
								goto l428
							}
							position++
							if buffer[position] != rune('r') {
								goto l428
							}
							position++
							if buffer[position] != rune('s') {
								goto l428
							}
							position++
							if buffer[position] != rune('d') {
								goto l428
							}
							position++
							if buffer[position] != rune('a') {
								goto l428
							}
							position++
							if buffer[position] != rune('y') {
								goto l428
							}
							position++
							if !_rules[rule_]() {
								goto l428
							}
							{
								add(ruleAction59, position)
							}
							break
						case 'w':
							if buffer[position] != rune('w') {
								goto l428
							}
							position++
							if buffer[position] != rune('e') {
								goto l428
							}
							position++
							if buffer[position] != rune('d') {
								goto l428
							}
							position++
							if buffer[position] != rune('n') {
								goto l428
							}
							position++
							if buffer[position] != rune('e') {
								goto l428
							}
							position++
							if buffer[position] != rune('s') {
								goto l428
							}
							position++
							if buffer[position] != rune('d') {
								goto l428
							}
							position++
							if buffer[position] != rune('a') {
								goto l428
							}
							position++
							if buffer[position] != rune('y') {
								goto l428
							}
							position++
							if !_rules[rule_]() {
								goto l428
							}
							{
								add(ruleAction58, position)
							}
							break
						default:
							if buffer[position] != rune('m') {
								goto l428
							}
							position++
							if buffer[position] != rune('o') {
								goto l428
							}
							position++
							if buffer[position] != rune('n') {
								goto l428
							}
							position++
							if buffer[position] != rune('d') {
								goto l428
							}
							position++
							if buffer[position] != rune('a') {
								goto l428
							}
							position++
							if buffer[position] != rune('y') {
								goto l428
							}
							position++
							if !_rules[rule_]() {
								goto l428
							}
							{
								add(ruleAction56, position)
							}
							break
						}
					}

				}
			l430:
				add(ruleWeekday, position429)
			}
			return true
		l428:
			position, tokenIndex = position428, tokenIndex428
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action62) / ('m' 'a' 'r' 'c' 'h' _ Action64) / ('a' 'p' 'r' 'i' 'l' _ Action65) / ('j' 'u' 'n' 'e' _ Action67) / ((&('d') ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action73)) | (&('n') ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action72)) | (&('o') ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action71)) | (&('s') ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action70)) | (&('a') ('a' 'u' 'g' 'u' 's' 't' _ Action69)) | (&('j') ('j' 'u' 'l' 'y' _ Action68)) | (&('m') ('m' 'a' 'y' _ Action66)) | (&('f') ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action63))))> */
		func() bool {
			position441, tokenIndex441 := position, tokenIndex
			{
				position442 := position
				{
					position443, tokenIndex443 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l444
					}
					position++
					if buffer[position] != rune('a') {
						goto l444
					}
					position++
					if buffer[position] != rune('n') {
						goto l444
					}
					position++
					if buffer[position] != rune('u') {
						goto l444
					}
					position++
					if buffer[position] != rune('a') {
						goto l444
					}
					position++
					if buffer[position] != rune('r') {
						goto l444
					}
					position++
					if buffer[position] != rune('y') {
						goto l444
					}
					position++
					if !_rules[rule_]() {
						goto l444
					}
					{
						add(ruleAction62, position)
					}
					goto l443
				l444:
					position, tokenIndex = position443, tokenIndex443
					if buffer[position] != rune('m') {
						goto l446
					}
					position++
					if buffer[position] != rune('a') {
						goto l446
					}
					position++
					if buffer[position] != rune('r') {
						goto l446
					}
					position++
					if buffer[position] != rune('c') {
						goto l446
					}
					position++
					if buffer[position] != rune('h') {
						goto l446
					}
					position++
					if !_rules[rule_]() {
						goto l446
					}
					{
						add(ruleAction64, position)
					}
					goto l443
				l446:
					position, tokenIndex = position443, tokenIndex443
					if buffer[position] != rune('a') {
						goto l448
					}
					position++
					if buffer[position] != rune('p') {
						goto l448
					}
					position++
					if buffer[position] != rune('r') {
						goto l448
					}
					position++
					if buffer[position] != rune('i') {
						goto l448
					}
					position++
					if buffer[position] != rune('l') {
						goto l448
					}
					position++
					if !_rules[rule_]() {
						goto l448
					}
					{
						add(ruleAction65, position)
					}
					goto l443
				l448:
					position, tokenIndex = position443, tokenIndex443
					if buffer[position] != rune('j') {
						goto l450
					}
					position++
					if buffer[position] != rune('u') {
						goto l450
					}
					position++
					if buffer[position] != rune('n') {
						goto l450
					}
					position++
					if buffer[position] != rune('e') {
						goto l450
					}
					position++
					if !_rules[rule_]() {
						goto l450
					}
					{
						add(ruleAction67, position)
					}
					goto l443
				l450:
					position, tokenIndex = position443, tokenIndex443
					{
						switch buffer[position] {
						case 'd':
							if buffer[position] != rune('d') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('c') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('m') {
								goto l441
							}
							position++
							if buffer[position] != rune('b') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('r') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction73, position)
							}
							break
						case 'n':
							if buffer[position] != rune('n') {
								goto l441
							}
							position++
							if buffer[position] != rune('o') {
								goto l441
							}
							position++
							if buffer[position] != rune('v') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('m') {
								goto l441
							}
							position++
							if buffer[position] != rune('b') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('r') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction72, position)
							}
							break
						case 'o':
							if buffer[position] != rune('o') {
								goto l441
							}
							position++
							if buffer[position] != rune('c') {
								goto l441
							}
							position++
							if buffer[position] != rune('t') {
								goto l441
							}
							position++
							if buffer[position] != rune('o') {
								goto l441
							}
							position++
							if buffer[position] != rune('b') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('r') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction71, position)
							}
							break
						case 's':
							if buffer[position] != rune('s') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('p') {
								goto l441
							}
							position++
							if buffer[position] != rune('t') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('m') {
								goto l441
							}
							position++
							if buffer[position] != rune('b') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('r') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction70, position)
							}
							break
						case 'a':
							if buffer[position] != rune('a') {
								goto l441
							}
							position++
							if buffer[position] != rune('u') {
								goto l441
							}
							position++
							if buffer[position] != rune('g') {
								goto l441
							}
							position++
							if buffer[position] != rune('u') {
								goto l441
							}
							position++
							if buffer[position] != rune('s') {
								goto l441
							}
							position++
							if buffer[position] != rune('t') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction69, position)
							}
							break
						case 'j':
							if buffer[position] != rune('j') {
								goto l441
							}
							position++
							if buffer[position] != rune('u') {
								goto l441
							}
							position++
							if buffer[position] != rune('l') {
								goto l441
							}
							position++
							if buffer[position] != rune('y') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction68, position)
							}
							break
						case 'm':
							if buffer[position] != rune('m') {
								goto l441
							}
							position++
							if buffer[position] != rune('a') {
								goto l441
							}
							position++
							if buffer[position] != rune('y') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction66, position)
							}
							break
						default:
							if buffer[position] != rune('f') {
								goto l441
							}
							position++
							if buffer[position] != rune('e') {
								goto l441
							}
							position++
							if buffer[position] != rune('b') {
								goto l441
							}
							position++
							if buffer[position] != rune('r') {
								goto l441
							}
							position++
							if buffer[position] != rune('u') {
								goto l441
							}
							position++
							if buffer[position] != rune('a') {
								goto l441
							}
							position++
							if buffer[position] != rune('r') {
								goto l441
							}
							position++
							if buffer[position] != rune('y') {
								goto l441
							}
							position++
							if !_rules[rule_]() {
								goto l441
							}
							{
								add(ruleAction63, position)
							}
							break
						}
					}

				}
			l443:
				add(ruleMonth, position442)
			}
			return true
		l441:
			position, tokenIndex = position441, tokenIndex441
			return false
		},
		/* 18 In <- <(IN Action74)> */
		func() bool {
			position461, tokenIndex461 := position, tokenIndex
			{
				position462 := position
				{
					position463 := position
					{
						position464, tokenIndex464 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l465
						}
						position++
						if buffer[position] != rune('n') {
							goto l465
						}
						position++
						if buffer[position] != rune(' ') {
							goto l465
						}
						position++
						if buffer[position] != rune('a') {
							goto l465
						}
						position++
						if buffer[position] != rune('n') {
							goto l465
						}
						position++
						goto l464
					l465:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('i') {
							goto l466
						}
						position++
						if buffer[position] != rune('n') {
							goto l466
						}
						position++
						if buffer[position] != rune(' ') {
							goto l466
						}
						position++
						if buffer[position] != rune('a') {
							goto l466
						}
						position++
						goto l464
					l466:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('i') {
							goto l461
						}
						position++
						if buffer[position] != rune('n') {
							goto l461
						}
						position++
					}
				l464:
					if !_rules[rule_]() {
						goto l461
					}
					add(ruleIN, position463)
				}
				{
					add(ruleAction74, position)
				}
				add(ruleIn, position462)
			}
			return true
		l461:
			position, tokenIndex = position461, tokenIndex461
			return false
		},
		/* 19 Last <- <(LAST Action75)> */
		func() bool {
			position468, tokenIndex468 := position, tokenIndex
			{
				position469 := position
				if !_rules[ruleLAST]() {
					goto l468
				}
				{
					add(ruleAction75, position)
				}
				add(ruleLast, position469)
			}
			return true
		l468:
			position, tokenIndex = position468, tokenIndex468
			return false
		},
		/* 20 Next <- <(NEXT Action76)> */
		func() bool {
			position471, tokenIndex471 := position, tokenIndex
			{
				position472 := position
				if !_rules[ruleNEXT]() {
					goto l471
				}
				{
					add(ruleAction76, position)
				}
				add(ruleNext, position472)
			}
			return true
		l471:
			position, tokenIndex = position471, tokenIndex471
			return false
		},
		/* 21 Ordinal <- <(((&('t') ('t' 'h')) | (&('r') ('r' 'd')) | (&('n') ('n' 'd')) | (&('s') ('s' 't'))) _)> */
		nil,
		/* 22 Word <- <([a-z]+ _)> */
		nil,
		/* 23 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position476, tokenIndex476 := position, tokenIndex
			{
				position477 := position
				if buffer[position] != rune('y') {
					goto l476
				}
				position++
				if buffer[position] != rune('e') {
					goto l476
				}
				position++
				if buffer[position] != rune('a') {
					goto l476
				}
				position++
				if buffer[position] != rune('r') {
					goto l476
				}
				position++
				{
					position478, tokenIndex478 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l478
					}
					position++
					goto l479
				l478:
					position, tokenIndex = position478, tokenIndex478
				}
			l479:
				if !_rules[rule_]() {
					goto l476
				}
				add(ruleYEARS, position477)
			}
			return true
		l476:
			position, tokenIndex = position476, tokenIndex476
			return false
		},
		/* 24 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position480, tokenIndex480 := position, tokenIndex
			{
				position481 := position
				if buffer[position] != rune('m') {
					goto l480
				}
				position++
				if buffer[position] != rune('o') {
					goto l480
				}
				position++
				if buffer[position] != rune('n') {
					goto l480
				}
				position++
				if buffer[position] != rune('t') {
					goto l480
				}
				position++
				if buffer[position] != rune('h') {
					goto l480
				}
				position++
				{
					position482, tokenIndex482 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l482
					}
					position++
					goto l483
				l482:
					position, tokenIndex = position482, tokenIndex482
				}
			l483:
				if !_rules[rule_]() {
					goto l480
				}
				add(ruleMONTHS, position481)
			}
			return true
		l480:
			position, tokenIndex = position480, tokenIndex480
			return false
		},
		/* 25 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position484, tokenIndex484 := position, tokenIndex
			{
				position485 := position
				if buffer[position] != rune('w') {
					goto l484
				}
				position++
				if buffer[position] != rune('e') {
					goto l484
				}
				position++
				if buffer[position] != rune('e') {
					goto l484
				}
				position++
				if buffer[position] != rune('k') {
					goto l484
				}
				position++
				{
					position486, tokenIndex486 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l486
					}
					position++
					goto l487
				l486:
					position, tokenIndex = position486, tokenIndex486
				}
			l487:
				if !_rules[rule_]() {
					goto l484
				}
				add(ruleWEEKS, position485)
			}
			return true
		l484:
			position, tokenIndex = position484, tokenIndex484
			return false
		},
		/* 26 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position488, tokenIndex488 := position, tokenIndex
			{
				position489 := position
				if buffer[position] != rune('d') {
					goto l488
				}
				position++
				if buffer[position] != rune('a') {
					goto l488
				}
				position++
				if buffer[position] != rune('y') {
					goto l488
				}
				position++
				{
					position490, tokenIndex490 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l490
					}
					position++
					goto l491
				l490:
					position, tokenIndex = position490, tokenIndex490
				}
			l491:
				if !_rules[rule_]() {
					goto l488
				}
				add(ruleDAYS, position489)
			}
			return true
		l488:
			position, tokenIndex = position488, tokenIndex488
			return false
		},
		/* 27 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position492, tokenIndex492 := position, tokenIndex
			{
				position493 := position
				if buffer[position] != rune('h') {
					goto l492
				}
				position++
				if buffer[position] != rune('o') {
					goto l492
				}
				position++
				if buffer[position] != rune('u') {
					goto l492
				}
				position++
				if buffer[position] != rune('r') {
					goto l492
				}
				position++
				{
					position494, tokenIndex494 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l494
					}
					position++
					goto l495
				l494:
					position, tokenIndex = position494, tokenIndex494
				}
			l495:
				if !_rules[rule_]() {
					goto l492
				}
				add(ruleHOURS, position493)
			}
			return true
		l492:
			position, tokenIndex = position492, tokenIndex492
			return false
		},
		/* 28 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position496, tokenIndex496 := position, tokenIndex
			{
				position497 := position
				if buffer[position] != rune('m') {
					goto l496
				}
				position++
				if buffer[position] != rune('i') {
					goto l496
				}
				position++
				if buffer[position] != rune('n') {
					goto l496
				}
				position++
				if buffer[position] != rune('u') {
					goto l496
				}
				position++
				if buffer[position] != rune('t') {
					goto l496
				}
				position++
				if buffer[position] != rune('e') {
					goto l496
				}
				position++
				{
					position498, tokenIndex498 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l498
					}
					position++
					goto l499
				l498:
					position, tokenIndex = position498, tokenIndex498
				}
			l499:
				if !_rules[rule_]() {
					goto l496
				}
				add(ruleMINUTES, position497)
			}
			return true
		l496:
			position, tokenIndex = position496, tokenIndex496
			return false
		},
		/* 29 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		nil,
		/* 30 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		nil,
		/* 31 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position502, tokenIndex502 := position, tokenIndex
			{
				position503 := position
				if buffer[position] != rune('a') {
					goto l502
				}
				position++
				if buffer[position] != rune('g') {
					goto l502
				}
				position++
				if buffer[position] != rune('o') {
					goto l502
				}
				position++
				if !_rules[rule_]() {
					goto l502
				}
				add(ruleAGO, position503)
			}
			return true
		l502:
			position, tokenIndex = position502, tokenIndex502
			return false
		},
		/* 32 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position504, tokenIndex504 := position, tokenIndex
			{
				position505 := position
				if buffer[position] != rune('f') {
					goto l504
				}
				position++
				if buffer[position] != rune('r') {
					goto l504
				}
				position++
				if buffer[position] != rune('o') {
					goto l504
				}
				position++
				if buffer[position] != rune('m') {
					goto l504
				}
				position++
				if buffer[position] != rune(' ') {
					goto l504
				}
				position++
				if buffer[position] != rune('n') {
					goto l504
				}
				position++
				if buffer[position] != rune('o') {
					goto l504
				}
				position++
				if buffer[position] != rune('w') {
					goto l504
				}
				position++
				if !_rules[rule_]() {
					goto l504
				}
				add(ruleFROM_NOW, position505)
			}
			return true
		l504:
			position, tokenIndex = position504, tokenIndex504
			return false
		},
		/* 33 NOW <- <('n' 'o' 'w' _)> */
		nil,
		/* 34 AM <- <('a' 'm' _)> */
		nil,
		/* 35 PM <- <('p' 'm' _)> */
		nil,
		/* 36 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position509, tokenIndex509 := position, tokenIndex
			{
				position510 := position
				if buffer[position] != rune('n') {
					goto l509
				}
				position++
				if buffer[position] != rune('e') {
					goto l509
				}
				position++
				if buffer[position] != rune('x') {
					goto l509
				}
				position++
				if buffer[position] != rune('t') {
					goto l509
				}
				position++
				if !_rules[rule_]() {
					goto l509
				}
				add(ruleNEXT, position510)
			}
			return true
		l509:
			position, tokenIndex = position509, tokenIndex509
			return false
		},
		/* 37 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		nil,
		/* 38 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position512, tokenIndex512 := position, tokenIndex
			{
				position513 := position
				{
					position514, tokenIndex514 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l515
					}
					position++
					if buffer[position] != rune('a') {
						goto l515
					}
					position++
					if buffer[position] != rune('s') {
						goto l515
					}
					position++
					if buffer[position] != rune('t') {
						goto l515
					}
					position++
					goto l514
				l515:
					position, tokenIndex = position514, tokenIndex514
					if buffer[position] != rune('p') {
						goto l516
					}
					position++
					if buffer[position] != rune('a') {
						goto l516
					}
					position++
					if buffer[position] != rune('s') {
						goto l516
					}
					position++
					if buffer[position] != rune('t') {
						goto l516
					}
					position++
					goto l514
				l516:
					position, tokenIndex = position514, tokenIndex514
					if buffer[position] != rune('p') {
						goto l512
					}
					position++
					if buffer[position] != rune('r') {
						goto l512
					}
					position++
					if buffer[position] != rune('e') {
						goto l512
					}
					position++
					if buffer[position] != rune('v') {
						goto l512
					}
					position++
					if buffer[position] != rune('i') {
						goto l512
					}
					position++
					if buffer[position] != rune('o') {
						goto l512
					}
					position++
					if buffer[position] != rune('u') {
						goto l512
					}
					position++
					if buffer[position] != rune('s') {
						goto l512
					}
					position++
				}
			l514:
				if !_rules[rule_]() {
					goto l512
				}
				add(ruleLAST, position513)
			}
			return true
		l512:
			position, tokenIndex = position512, tokenIndex512
			return false
		},
		/* 39 _ <- <Whitespace*> */
		func() bool {
			{
				position518 := position
			l519:
				{
					position520, tokenIndex520 := position, tokenIndex
					{
						position521 := position
						{
							switch buffer[position] {
							case '\t':
								if buffer[position] != rune('\t') {
									goto l520
								}
								position++
								break
							case ' ':
								if buffer[position] != rune(' ') {
									goto l520
								}
								position++
								break
							default:
								{
									position523 := position
									{
										position524, tokenIndex524 := position, tokenIndex
										if buffer[position] != rune('\r') {
											goto l525
										}
										position++
										if buffer[position] != rune('\n') {
											goto l525
										}
										position++
										goto l524
									l525:
										position, tokenIndex = position524, tokenIndex524
										if buffer[position] != rune('\n') {
											goto l526
										}
										position++
										goto l524
									l526:
										position, tokenIndex = position524, tokenIndex524
										if buffer[position] != rune('\r') {
											goto l520
										}
										position++
									}
								l524:
									add(ruleEOL, position523)
								}
								break
							}
						}

						add(ruleWhitespace, position521)
					}
					goto l519
				l520:
					position, tokenIndex = position520, tokenIndex520
				}
				add(rule_, position518)
			}
			return true
		},
		/* 40 Whitespace <- <((&('\t') '\t') | (&(' ') ' ') | (&('\n' | '\r') EOL))> */
		nil,
		/* 41 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		nil,
		/* 42 EOF <- <!.> */
		nil,
		/* 44 Action0 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		nil,
		/* 45 Action1 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		nil,
		/* 46 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		nil,
		/* 47 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		nil,
		/* 48 Action4 <- <{
		   p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))
		 }> */
		nil,
		/* 49 Action5 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		nil,
		/* 50 Action6 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		nil,
		/* 51 Action7 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		nil,
		/* 52 Action8 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		nil,
		/* 53 Action9 <- <{
		   p.t = p.t.Add(p.withDirection(time.Hour) * time.Duration(p.number))
		 }> */
		nil,
		/* 54 Action10 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		nil,
		/* 55 Action11 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		nil,
		/* 56 Action12 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		nil,
		/* 57 Action13 <- <{
		   p.t = truncateDay(p.t.Add(day * time.Duration(p.number)))
		 }> */
		nil,
		/* 58 Action14 <- <{
		   p.t = truncateDay(p.t.Add(p.withDirection(day) * time.Duration(p.number)))
		 }> */
		nil,
		/* 59 Action15 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		nil,
		/* 60 Action16 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		nil,
		/* 61 Action17 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		nil,
		/* 62 Action18 <- <{
		   p.t = truncateDay(p.t.Add(week * time.Duration(p.number)))
		 }> */
		nil,
		/* 63 Action19 <- <{
		   p.t = truncateDay(p.t.Add(p.withDirection(week) * time.Duration(p.number)))
		 }> */
		nil,
		/* 64 Action20 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		nil,
		/* 65 Action21 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		nil,
		/* 66 Action22 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		nil,
		/* 67 Action23 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		nil,
		/* 68 Action24 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		nil,
		/* 69 Action25 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		nil,
		/* 70 Action26 <- <{
		   if p.direction < 0 {
		     p.t = prevMonth(p.t, p.month)
		   } else {
		     p.t = nextMonth(p.t, p.month)
		   }
		 }> */
		nil,
		/* 71 Action27 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		nil,
		/* 72 Action28 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		nil,
		/* 73 Action29 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		nil,
		/* 74 Action30 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		nil,
		/* 75 Action31 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		nil,
		/* 76 Action32 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		nil,
		/* 77 Action33 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		nil,
		/* 78 Action34 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		nil,
		/* 79 Action35 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		nil,
		/* 80 Action36 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		nil,
		/* 81 Action37 <- <{
		   if p.direction < 0 {
		     p.t = truncateDay(prevWeekday(p.t, p.weekday))
		   } else {
		     p.t = truncateDay(nextWeekday(p.t, p.weekday))
		   }
		 }> */
		nil,
		/* 82 Action38 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		nil,
		/* 83 Action39 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		nil,
		/* 84 Action40 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		nil,
		/* 85 Action41 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		nil,
		/* 86 Action42 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		nil,
		/* 87 Action43 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		nil,
		nil,
		/* 89 Action44 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		nil,
		/* 90 Action45 <- <{ p.number = 1 }> */
		nil,
		/* 91 Action46 <- <{ p.number = 2 }> */
		nil,
		/* 92 Action47 <- <{ p.number = 3 }> */
		nil,
		/* 93 Action48 <- <{ p.number = 4 }> */
		nil,
		/* 94 Action49 <- <{ p.number = 5 }> */
		nil,
		/* 95 Action50 <- <{ p.number = 6 }> */
		nil,
		/* 96 Action51 <- <{ p.number = 7 }> */
		nil,
		/* 97 Action52 <- <{ p.number = 8 }> */
		nil,
		/* 98 Action53 <- <{ p.number = 9 }> */
		nil,
		/* 99 Action54 <- <{ p.number = 10 }> */
		nil,
		/* 100 Action55 <- <{ p.weekday = time.Sunday }> */
		nil,
		/* 101 Action56 <- <{ p.weekday = time.Monday }> */
		nil,
		/* 102 Action57 <- <{ p.weekday = time.Tuesday }> */
		nil,
		/* 103 Action58 <- <{ p.weekday = time.Wednesday }> */
		nil,
		/* 104 Action59 <- <{ p.weekday = time.Thursday }> */
		nil,
		/* 105 Action60 <- <{ p.weekday = time.Friday }> */
		nil,
		/* 106 Action61 <- <{ p.weekday = time.Saturday }> */
		nil,
		/* 107 Action62 <- <{ p.month = time.January }> */
		nil,
		/* 108 Action63 <- <{ p.month = time.February }> */
		nil,
		/* 109 Action64 <- <{ p.month = time.March }> */
		nil,
		/* 110 Action65 <- <{ p.month = time.April }> */
		nil,
		/* 111 Action66 <- <{ p.month = time.May }> */
		nil,
		/* 112 Action67 <- <{ p.month = time.June }> */
		nil,
		/* 113 Action68 <- <{ p.month = time.July }> */
		nil,
		/* 114 Action69 <- <{ p.month = time.August }> */
		nil,
		/* 115 Action70 <- <{ p.month = time.September }> */
		nil,
		/* 116 Action71 <- <{ p.month = time.October }> */
		nil,
		/* 117 Action72 <- <{ p.month = time.November }> */
		nil,
		/* 118 Action73 <- <{ p.month = time.December }> */
		nil,
		/* 119 Action74 <- <{ p.number = 1}> */
		nil,
		/* 120 Action75 <- <{ p.number = 1 }> */
		nil,
		/* 121 Action76 <- <{ p.number = 1 }> */
		nil,
	}
	p.rules = _rules
	return nil
}
